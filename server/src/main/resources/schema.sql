CREATE TABLE IF NOT EXISTS USERS
(
    USER_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EMAIL   VARCHAR(50) UNIQUE NOT NULL,
    NAME    VARCHAR(50)        NOT NULL
);

CREATE TABLE IF NOT EXISTS REQUESTS
(
    REQUEST_ID  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    DESCRIPTION VARCHAR(255) NOT NULL,
    CREATED     TIMESTAMP    NOT NULL,
    USER_ID     INTEGER      NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS ITEMS
(
    ITEM_ID     BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME        VARCHAR(50)  NOT NULL,
    DESCRIPTION VARCHAR(255) NOT NULL,
    AVAILABLE   BOOLEAN      NOT NULL,
    OWNER_ID    INTEGER      NOT NULL,
    REQUEST_ID  INTEGER,
    foreign key (OWNER_ID) references USERS (USER_ID) ON DELETE CASCADE,
    foreign key (REQUEST_ID) REFERENCES REQUESTS (REQUEST_ID)
);

CREATE TABLE IF NOT EXISTS BOOKING
(
    BOOKING_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    START_TIME TIMESTAMP   NOT NULL,
    END_TIME   TIMESTAMP   NOT NULL,
    ITEM_ID    INTEGER     NOT NULL,
    BOOKER_ID  INTEGER     NOT NULL,
    STATUS     VARCHAR(10) NOT NULL,
    foreign key (BOOKER_ID) references USERS (USER_ID) ON DELETE CASCADE,
    foreign key (ITEM_ID) references ITEMS ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS COMMENTS
(
    COMMENT_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TEXT       VARCHAR(255) NOT NULL,
    ITEM_ID    INTEGER      NOT NULL,
    AUTHOR_ID  INTEGER      NOT NULL,
    CREATED    TIMESTAMP    NOT NULL,
    foreign key (ITEM_ID) references ITEMS ON DELETE CASCADE,
    foreign key (AUTHOR_ID) references USERS (USER_ID) ON DELETE CASCADE
);